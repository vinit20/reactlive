{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","backgroundColor","value","onChange","event","target","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4fec7e72.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, about: PropTypes.string.isRequired }\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  about: \"About\"\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked\" +text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        // console.log(\"lowercasecase was clicked\" +text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        // console.log(\"lowercasecase was clicked\" +text);\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    // text=\"newText\"   // wrong way to change the state\r\n    // setText(\"new text\"); // correct way\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n            <div className=\"form-group\">\r\n                {/* <label for=\"myBox\">Enter your text below</label> */}\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" style={{backgroundColor:props.mode === 'dark'?'#464a47':'white', color: props.mode === \"dark\"?\"white\":\"black\"}} value={text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleUpClick}>CONVERT TO UPPERCASE</button>\r\n            <button className=\"btn btn-warning mt-3\" onClick={handleLowClick}>convert to lowercase</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-danger mt-3 mx-2\" onClick={handleClearClick}>Clear</button>\r\n            <button className=\"btn btn-info mt-3 mx-2\" onClick={handleExtraSpaces}> Remove Extra Spaces</button>\r\n        </div>\r\n\r\n        <div className=\"container my-4\"  style={{color:props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n            <p> {0.008 * text.split(\" \").length } Minutes read </p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import './App.css';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react'\n\n\nlet name = \"vinit\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");   //Whether dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode === \"light\"){\n    setMode(\"dark\");\n    document.body.style.backgroundColor = \"#464a47\";\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n\n  return (\n    <>\n\n      <Navbar title=\"TextUtils\" about=\"About us\" mode={mode} toggleMode={toggleMode}/>\n\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\n        {/* <About /> */}\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}